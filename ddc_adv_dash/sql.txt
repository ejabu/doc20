1 SQL UNTUK MENGCOUNT JUMLAH MDR PER WEEK


SELECT

date_trunc('week', revision_date::date) as weekly,
COUNT(*)

FROM master_deliver mdr

GROUP BY weekly
ORDER BY weekly



SELECT * FROM master_deliver





2 SQL per week per External Status
SELECT

external_status,
date_trunc('week', revision_date::date) as weekly,
COUNT(*)

FROM master_deliver mdr
WHERE is_history is TRUE

-- nanti tambahin WHERE External status ID in [4,5,6,7]

GROUP BY external_status, weekly
ORDER BY weekly



-- REV 2.0

SELECT
min(mdr.id) as id,
mdr.external_status,
to_char(date_trunc('week', mdr.revision_date) ,'DD-Mon-YY') as weekly,
COUNT(*) as count

FROM master_deliver mdr
WHERE is_history is TRUE
AND revision_date >  CURRENT_DATE - INTERVAL '3 months'

GROUP BY mdr.external_status, weekly
ORDER BY weekly


-- REV 3.0 Join nama external_status
SELECT
min(mdr.id) as id,
exs.name,
to_char(date_trunc('week', mdr.revision_date) ,'DD-Mon-YY') as weekly,
COUNT(*) as count

FROM master_deliver mdr JOIN conf_external_status exs ON mdr.external_status = exs.id
WHERE is_history is TRUE
AND revision_date >  CURRENT_DATE - INTERVAL '3 months'
AND exs.name in ('IFI','IFA','IFR','IFC')

GROUP BY mdr.external_status, exs.name, weekly
ORDER BY weekly




-- REV 0.4 mengenerate WEEK dari 3 bulan lalu, start dari senin

SELECT

generate_series(((CURRENT_DATE + cast(abs(extract(dow from current_date) - 7)+ 1 as int)) - INTERVAL '3 months'), CURRENT_DATE, '1 week'::interval);


-- REV 0.5 generate Week kemudian cast to char
SELECT



to_char(timestamp ,'DD-Mon-YYYY') as weekly

FROM

generate_series(

((CURRENT_DATE + cast(abs(extract(dow from current_date) - 7)+ 1 as int)) - INTERVAL '3 months'), CURRENT_DATE, '1 week'::interval

) as timestamp









---

SELECT
(random()*200000)::int AS id,

a.external_status as external_status,
b.weekz as weekly,
a.count as count


FROM
(

SELECT
min(mdr.id) as id,
exs.name as external_status,
to_char(date_trunc('week', mdr.revision_date) ,'DD-Mon-YY') as weekly,
COUNT(*) as count

FROM master_deliver mdr JOIN conf_external_status exs ON mdr.external_status = exs.id
WHERE is_history is TRUE
AND revision_date >  CURRENT_DATE - INTERVAL '3 months'
AND exs.name in ('IFI','IFA','IFR','IFC')

GROUP BY mdr.external_status, exs.name, weekly
ORDER BY weekly

) a




--SUPAYA KEAMBIL SEMUA WEEK WALAUPUN NULL
RIGHT JOIN
   (
SELECT



to_char(timestamp ,'DD-Mon-YY') as weekz

FROM

generate_series(

((CURRENT_DATE + cast(abs(extract(dow from current_date) - 7)+ 1 as int)) - INTERVAL '3 months'), CURRENT_DATE, '1 week'::interval

) as timestamp

) b

ON a.weekly = b.weekz


---------



SELECT
(random()*200)::int AS id,

a.external_status as external_status2,
CASE WHEN a.external_status is NULL THEN 'undf' ELSE a.external_status END,
b.weekz as weekly,
a.count as count


FROM
(

SELECT
min(mdr.id) as id,
exs.name as external_status,
to_char(date_trunc('week', mdr.revision_date) ,'DD-Mon-YY') as weekly,
COUNT(*) as count

FROM master_deliver mdr JOIN conf_external_status exs ON mdr.external_status = exs.id
WHERE is_history is TRUE
AND revision_date >  CURRENT_DATE - INTERVAL '3 months'
AND exs.name in ('IFI','IFA','IFR','IFC')

GROUP BY mdr.external_status, exs.name, weekly
ORDER BY weekly

) a




--SUPAYA KEAMBIL SEMUA WEEK WALAUPUN NULL
RIGHT JOIN
   (
SELECT



to_char(timestamp ,'DD-Mon-YY') as weekz

FROM

generate_series(

((CURRENT_DATE + cast(abs(extract(dow from current_date) - 7)+ 1 as int)) - INTERVAL '3 months'), CURRENT_DATE, '1 week'::interval

) as timestamp

) b

ON a.weekly = b.weekz

---




---------- LATEST



SELECT
1 AS id,

a.external_status as external_status,
b.weekz as weekly,
a.count as count


FROM
(

SELECT
min(mdr.id) as id,
exs.name as external_status,
to_char(date_trunc('week', mdr.revision_date) ,'DD-Mon-YY') as weekly,
COUNT(*) as count

FROM master_deliver mdr JOIN conf_external_status exs ON mdr.external_status = exs.id
WHERE is_history is TRUE
AND revision_date >  CURRENT_DATE - INTERVAL '3 months'
AND exs.name in ('IFI','IFA','IFR','IFC')

GROUP BY mdr.external_status, exs.name, weekly
ORDER BY weekly

) a




--SUPAYA KEAMBIL SEMUA WEEK WALAUPUN NULL
RIGHT JOIN
   (
SELECT



to_char(timestamp ,'DD-Mon-YY') as weekz

FROM

generate_series(

((CURRENT_DATE + cast(abs(extract(dow from current_date) - 7)+ 1 as int)) - INTERVAL '3 months'), CURRENT_DATE, '1 week'::interval

) as timestamp

) b

ON a.weekly = b.weekz
